{"id":"../../node_modules/@iobroker/adapter-react/Components/Utils.js","dependencies":[{"name":"/opt/iobroker/iobroker.rssfeed/node_modules/@iobroker/adapter-react/Components/Utils.js.map","includedInParent":true,"mtime":499162500000},{"name":"/opt/iobroker/iobroker.rssfeed/package.json","includedInParent":true,"mtime":1608154630504},{"name":"/opt/iobroker/iobroker.rssfeed/node_modules/@iobroker/adapter-react/package.json","includedInParent":true,"mtime":1608065865079},{"name":"react","loc":{"line":8,"column":44},"parent":"/opt/iobroker/iobroker.rssfeed/node_modules/@iobroker/adapter-react/Components/Utils.js","resolved":"/opt/iobroker/iobroker.rssfeed/node_modules/react/index.js"},{"name":"../i18n","loc":{"line":10,"column":43},"parent":"/opt/iobroker/iobroker.rssfeed/node_modules/@iobroker/adapter-react/Components/Utils.js","resolved":"/opt/iobroker/iobroker.rssfeed/node_modules/@iobroker/adapter-react/i18n.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _i18n = _interopRequireDefault(require(\"../i18n\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar NAMESPACE = 'material';\nvar days = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'];\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\nvar Utils = /*#__PURE__*/function () {\n  function Utils() {\n    _classCallCheck(this, Utils);\n  }\n\n  _createClass(Utils, null, [{\n    key: \"CapitalWords\",\n\n    /**\r\n     * Capitalize words.\r\n     * @param {string | undefined} name\r\n     * @returns {string}\r\n     */\n    value: function CapitalWords(name) {\n      return (name || '').split(/[\\s_]/).filter(function (item) {\n        return item;\n      }).map(function (word) {\n        return word ? word[0].toUpperCase() + word.substring(1).toLowerCase() : '';\n      }).join(' ');\n    }\n    /**\r\n     * Get the name of the object by id from the name or description.\r\n     * @param {Record<string, ioBroker.Object>} objects\r\n     * @param {string} id\r\n     * @param {{ name: any; } | ioBroker.Languages | null} settings\r\n     * @param {{ language?: ioBroker.Languages; }} options\r\n     * @param {boolean} [isDesc] Set to true to get the description.\r\n     * @returns {string}\r\n     */\n\n  }, {\n    key: \"getObjectName\",\n    value: function getObjectName(objects, id, settings, options, isDesc) {\n      var item = objects[id];\n      var text = id;\n      var attr = isDesc ? 'desc' : 'name';\n\n      if (typeof settings === 'string' && !options) {\n        options = {\n          language: settings\n        };\n        settings = null;\n      }\n\n      options = options || {};\n\n      if (!options.language) {\n        options.language = objects['system.config'] && objects['system.config'].common && objects['system.config'].common.language || window.sysLang || 'en';\n      }\n\n      if (settings && settings.name) {\n        text = settings.name;\n\n        if (_typeof(text) === 'object') {\n          text = text[options.language] || text.en;\n        }\n      } else if (item && item.common && item.common[attr]) {\n        text = item.common[attr];\n\n        if (attr !== 'desc' && !text && item.common.desc) {\n          text = item.common.desc;\n        }\n\n        if (_typeof(text) === 'object') {\n          text = text[options.language] || text.en || text.de || text.ru || '';\n        }\n\n        text = (text || '').toString().replace(/[_.]/g, ' ');\n\n        if (text === text.toUpperCase()) {\n          text = text[0] + text.substring(1).toLowerCase();\n        }\n      } else {\n        var pos = id.lastIndexOf('.');\n        text = id.substring(pos + 1).replace(/[_.]/g, ' ');\n        text = Utils.CapitalWords(text);\n      }\n\n      return text.trim();\n    }\n    /**\r\n     * Get the name of the object from the name or description.\r\n     * @param {ioBroker.PartialObject} obj\r\n     * @param {{ name: any; } | ioBroker.Languages | null } settings or language\r\n     * @param {{ language?: ioBroker.Languages; } } options\r\n     * @param {boolean} [isDesc] Set to true to get the description.\r\n     * @returns {string}\r\n     */\n\n  }, {\n    key: \"getObjectNameFromObj\",\n    value: function getObjectNameFromObj(obj, settings, options, isDesc) {\n      var item = obj;\n      var text = obj && obj._id || '';\n      var attr = isDesc ? 'desc' : 'name';\n\n      if (typeof settings === 'string' && !options) {\n        options = {\n          language: settings\n        };\n        settings = null;\n      }\n\n      options = options || {};\n\n      if (settings && settings.name) {\n        text = settings.name;\n\n        if (_typeof(text) === 'object') {\n          text = text[options.language] || text.en;\n        }\n      } else if (item && item.common && item.common[attr]) {\n        text = item.common[attr];\n\n        if (attr !== 'desc' && !text && item.common.desc) {\n          text = item.common.desc;\n        }\n\n        if (_typeof(text) === 'object') {\n          text = text[options.language] || text.en;\n        }\n\n        text = (text || '').toString().replace(/[_.]/g, ' ');\n\n        if (text === text.toUpperCase()) {\n          text = text[0] + text.substring(1).toLowerCase();\n        }\n      }\n\n      return text.trim();\n    }\n    /**\r\n     * @param {ioBroker.PartialObject | ioBroker.ObjectCommon} obj\r\n     * @param {string} forEnumId\r\n     * @param {{ user: string; }} options\r\n     * @returns {string | null}\r\n     */\n\n  }, {\n    key: \"getSettingsOrder\",\n    value: function getSettingsOrder(obj, forEnumId, options) {\n      if (obj && obj.hasOwnProperty('common')) {\n        obj = obj.common;\n      }\n\n      var settings;\n\n      if (obj && obj.custom) {\n        settings = (obj.custom || {})[NAMESPACE];\n        var user = options.user || 'admin';\n\n        if (settings && settings[user]) {\n          if (forEnumId) {\n            if (settings[user].subOrder && settings[user].subOrder[forEnumId]) {\n              return JSON.parse(JSON.stringify(settings[user].subOrder[forEnumId]));\n            }\n          } else {\n            if (settings[user].order) {\n              return JSON.parse(JSON.stringify(settings[user].order));\n            }\n          }\n        }\n      }\n\n      return null;\n    }\n    /**\r\n     * @param {ioBroker.PartialObject | ioBroker.ObjectCommon} obj\r\n     * @param {string} forEnumId\r\n     * @param {{ user: string; }} options\r\n     */\n\n  }, {\n    key: \"getSettingsCustomURLs\",\n    value: function getSettingsCustomURLs(obj, forEnumId, options) {\n      if (obj && obj.hasOwnProperty('common')) {\n        obj = obj.common;\n      }\n\n      var settings;\n\n      if (obj && obj.custom) {\n        settings = (obj.custom || {})[NAMESPACE];\n        var user = options.user || 'admin';\n\n        if (settings && settings[user]) {\n          if (forEnumId) {\n            if (settings[user].subURLs && settings[user].subURLs[forEnumId]) {\n              return JSON.parse(JSON.stringify(settings[user].subURLs[forEnumId]));\n            }\n          } else {\n            if (settings[user].URLs) {\n              return JSON.parse(JSON.stringify(settings[user].URLs));\n            }\n          }\n        }\n      }\n\n      return null;\n    }\n    /**\r\n     * Reorder the array items in list between source and dest.\r\n     * @param {Iterable<any> | ArrayLike<any>} list\r\n     * @param {number} source\r\n     * @param {number} dest\r\n     */\n\n  }, {\n    key: \"reorder\",\n    value: function reorder(list, source, dest) {\n      var result = Array.from(list);\n\n      var _result$splice = result.splice(source, 1),\n          _result$splice2 = _slicedToArray(_result$splice, 1),\n          removed = _result$splice2[0];\n\n      result.splice(dest, 0, removed);\n      return result;\n    }\n  }, {\n    key: \"getSettings\",\n\n    /**\r\n     * @param {any} obj\r\n     * @param {{ id: any; user: any; name: any; icon: any; color: any; language: ioBroker.Languages; }} options\r\n     * @param {boolean} [defaultEnabling]\r\n     */\n    value: function getSettings(obj, options, defaultEnabling) {\n      var settings;\n      var id = obj && obj._id || options && options.id;\n\n      if (obj && obj.hasOwnProperty('common')) {\n        obj = obj.common;\n      }\n\n      if (obj && obj.custom) {\n        settings = obj.custom || {};\n        settings = settings[NAMESPACE] && settings[NAMESPACE][options.user || 'admin'] ? JSON.parse(JSON.stringify(settings[NAMESPACE][options.user || 'admin'])) : {\n          enabled: true\n        };\n      } else {\n        settings = {\n          enabled: defaultEnabling === undefined ? true : defaultEnabling,\n          useCustom: false\n        };\n      }\n\n      if (!settings.hasOwnProperty('enabled')) {\n        settings.enabled = defaultEnabling === undefined ? true : defaultEnabling;\n      }\n\n      if (false && settings.useCommon) {\n        if (obj.color) settings.color = obj.color;\n        if (obj.icon) settings.icon = obj.icon;\n        if (obj.name) settings.name = obj.name;\n      } else {\n        if (options) {\n          if (!settings.name && options.name) settings.name = options.name;\n          if (!settings.icon && options.icon) settings.icon = options.icon;\n          if (!settings.color && options.color) settings.color = options.color;\n        }\n\n        if (obj) {\n          if (!settings.color && obj.color) settings.color = obj.color;\n          if (!settings.icon && obj.icon) settings.icon = obj.icon;\n          if (!settings.name && obj.name) settings.name = obj.name;\n        }\n      }\n\n      if (_typeof(settings.name) === 'object') {\n        settings.name = settings.name[options.language] || settings.name.en;\n        settings.name = (settings.name || '').toString().replace(/_/g, ' ');\n\n        if (settings.name === settings.name.toUpperCase()) {\n          settings.name = settings.name[0] + settings.name.substring(1).toLowerCase();\n        }\n      }\n\n      if (!settings.name && id) {\n        var pos = id.lastIndexOf('.');\n        settings.name = id.substring(pos + 1).replace(/[_.]/g, ' ');\n        settings.name = (settings.name || '').toString().replace(/_/g, ' ');\n        settings.name = Utils.CapitalWords(settings.name);\n      }\n\n      return settings;\n    }\n    /**\r\n     * @param {any} obj\r\n     * @param {any} settings\r\n     * @param {{ user: any; language: ioBroker.Languages; }} options\r\n     */\n\n  }, {\n    key: \"setSettings\",\n    value: function setSettings(obj, settings, options) {\n      if (obj) {\n        obj.common = obj.common || {};\n        obj.common.custom = obj.common.custom || {};\n        obj.common.custom[NAMESPACE] = obj.common.custom[NAMESPACE] || {};\n        obj.common.custom[NAMESPACE][options.user || 'admin'] = settings;\n        var s = obj.common.custom[NAMESPACE][options.user || 'admin'];\n\n        if (s.useCommon) {\n          if (s.color !== undefined) {\n            obj.common.color = s.color;\n            delete s.color;\n          }\n\n          if (s.icon !== undefined) {\n            obj.common.icon = s.icon;\n            delete s.icon;\n          }\n\n          if (s.name !== undefined) {\n            if (_typeof(obj.common.name) !== 'object') {\n              obj.common.name = {};\n              obj.common.name[options.language] = s.name;\n            } else {\n              obj.common.name[options.language] = s.name;\n            }\n\n            delete s.name;\n          }\n        }\n\n        return true;\n      } else {\n        return false;\n      }\n    }\n    /**\r\n     * Get the icon for the given settings.\r\n     * @param {{ icon: string | undefined; name: string | undefined; prefix: string | undefined}} settings\r\n     * @param {any} style\r\n     * @returns {JSX.Element | null}\r\n     */\n\n  }, {\n    key: \"getIcon\",\n    value: function getIcon(settings, style) {\n      if (settings && settings.icon) {\n        // If UTF-8 icon\n        if (settings.icon.length <= 2) {\n          return /*#__PURE__*/_react[\"default\"].createElement(\"span\", {\n            style: style || {}\n          }, settings.icon);\n        } else if (settings.icon.startsWith('data:image')) {\n          return /*#__PURE__*/_react[\"default\"].createElement(\"img\", {\n            alt: settings.name,\n            src: settings.icon,\n            style: style || {}\n          });\n        } else {\n          // may be later some changes for second type\n          return /*#__PURE__*/_react[\"default\"].createElement(\"img\", {\n            alt: settings.name,\n            src: (settings.prefix || '') + settings.icon,\n            style: style || {}\n          });\n        }\n      }\n\n      return null;\n    }\n    /**\r\n     * Get the icon for the given object.\r\n     * @param {string} id\r\n     * @param {{ common: { icon: any; }; }} obj\r\n     * @returns {string | null}\r\n     */\n\n  }, {\n    key: \"getObjectIcon\",\n    value: function getObjectIcon(id, obj) {\n      // If id is Object\n      if (_typeof(id) === 'object') {\n        obj = id;\n        id = obj._id;\n      }\n\n      if (obj && obj.common && obj.common.icon) {\n        var icon = obj.common.icon; // If UTF-8 icon\n\n        if (typeof icon === 'string' && icon.length <= 2) {\n          return icon;\n        } else if (icon.startsWith('data:image')) {\n          return icon;\n        } else {\n          var parts = id.split('.');\n\n          if (parts[0] === 'system') {\n            icon = 'adapter/' + parts[2] + (icon.startsWith('/') ? '' : '/') + icon;\n          } else {\n            icon = 'adapter/' + parts[0] + (icon.startsWith('/') ? '' : '/') + icon;\n          }\n\n          if (window.location.pathname.match(/adapter\\/[^/]+\\/[^/]+\\.html/)) {\n            icon = '../../' + icon;\n          } else if (window.location.pathname.match(/material\\/[.\\d]+/)) {\n            icon = '../../' + icon;\n          } else if (window.location.pathname.match(/material\\//)) {\n            icon = '../' + icon;\n          }\n\n          return icon;\n        }\n      } else {\n        return null;\n      }\n    }\n    /**\r\n     * Splits CamelCase into words.\r\n     * @param {string | undefined} text\r\n     * @returns {string}\r\n     */\n\n  }, {\n    key: \"splitCamelCase\",\n    value: function splitCamelCase(text) {\n      if (false && text !== text.toUpperCase()) {\n        var words = text.split(/\\s+/);\n\n        for (var i = 0; i < words.length; i++) {\n          var word = words[i];\n\n          if (word.toLowerCase() !== word && word.toUpperCase() !== word) {\n            var z = 0;\n            var ww = [];\n            var start = 0;\n\n            while (z < word.length) {\n              if (word[z].match(/[A-ZÜÄÖА-Я]/)) {\n                ww.push(word.substring(start, z));\n                start = z;\n              }\n\n              z++;\n            }\n\n            if (start !== z) {\n              ww.push(word.substring(start, z));\n            }\n\n            for (var k = 0; k < ww.length; k++) {\n              words.splice(i + k, 0, ww[k]);\n            }\n\n            i += ww.length;\n          }\n        }\n\n        return words.map(function (w) {\n          w = w.trim();\n\n          if (w) {\n            return w[0].toUpperCase() + w.substring(1).toLowerCase();\n          }\n\n          return '';\n        }).join(' ');\n      } else {\n        return Utils.CapitalWords(text);\n      }\n    }\n    /**\r\n     * Check if the given color is bright.\r\n     * https://stackoverflow.com/questions/35969656/how-can-i-generate-the-opposite-color-according-to-current-color\r\n     * @param {string | null | undefined} color\r\n     * @param {boolean} [defaultValue]\r\n     * @returns {boolean}\r\n     */\n\n  }, {\n    key: \"isUseBright\",\n    value: function isUseBright(color, defaultValue) {\n      if (color === null || color === undefined || color === '') {\n        return defaultValue === undefined ? true : defaultValue;\n      }\n\n      color = color.toString();\n\n      if (color.indexOf('#') === 0) {\n        color = color.slice(1);\n      }\n\n      var r;\n      var g;\n      var b;\n      var rgb = color.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);\n\n      if (rgb && rgb.length === 4) {\n        r = parseInt(rgb[1], 10);\n        g = parseInt(rgb[2], 10);\n        b = parseInt(rgb[3], 10);\n      } else {\n        // convert 3-digit hex to 6-digits.\n        if (color.length === 3) {\n          color = color[0] + color[0] + color[1] + color[1] + color[2] + color[2];\n        }\n\n        if (color.length !== 6) {\n          return false;\n        }\n\n        r = parseInt(color.slice(0, 2), 16);\n        g = parseInt(color.slice(2, 4), 16);\n        b = parseInt(color.slice(4, 6), 16);\n      } // http://stackoverflow.com/a/3943023/112731\n\n\n      return r * 0.299 + g * 0.587 + b * 0.114 <= 186;\n    }\n  }, {\n    key: \"getTimeString\",\n\n    /**\r\n     * Get the time string in the format 00:00.\r\n     * @param {string | number} seconds\r\n     */\n    value: function getTimeString(seconds) {\n      seconds = parseFloat(seconds);\n\n      if (isNaN(seconds)) {\n        return '--:--';\n      }\n\n      var hours = Math.floor(seconds / 3600);\n      var minutes = Math.floor(seconds % 3600 / 60);\n      var secs = seconds % 60;\n\n      if (hours) {\n        if (minutes < 10) minutes = '0' + minutes;\n        if (secs < 10) secs = '0' + secs;\n        return hours + ':' + minutes + ':' + secs;\n      } else {\n        if (secs < 10) secs = '0' + secs;\n        return minutes + ':' + secs;\n      }\n    }\n    /**\r\n     * Gets the wind direction with the given angle (degrees).\r\n     * @param {number} angle in degrees.\r\n     * @returns {string | undefined}\r\n     */\n\n  }, {\n    key: \"getWindDirection\",\n    value: function getWindDirection(angle) {\n      if (angle >= 0 && angle < 11.25) {\n        return 'N';\n      } else if (angle >= 11.25 && angle < 33.75) {\n        return 'NNE';\n      } else if (angle >= 33.75 && angle < 56.25) {\n        return 'NE';\n      } else if (angle >= 56.25 && angle < 78.75) {\n        return 'ENE';\n      } else if (angle >= 78.75 && angle < 101.25) {\n        return 'E';\n      } else if (angle >= 101.25 && angle < 123.75) {\n        return 'ESE';\n      } else if (angle >= 123.75 && angle < 146.25) {\n        return 'SE';\n      } else if (angle >= 146.25 && angle < 168.75) {\n        return 'SSE';\n      } else if (angle >= 168.75 && angle < 191.25) {\n        return 'S';\n      } else if (angle >= 191.25 && angle < 213.75) {\n        return 'SSW';\n      } else if (angle >= 213.75 && angle < 236.25) {\n        return 'SW';\n      } else if (angle >= 236.25 && angle < 258.75) {\n        return 'WSW';\n      } else if (angle >= 258.75 && angle < 281.25) {\n        return 'W';\n      } else if (angle >= 281.25 && angle < 303.75) {\n        return 'WNW';\n      } else if (angle >= 303.75 && angle < 326.25) {\n        return 'NW';\n      } else if (angle >= 326.25 && angle < 348.75) {\n        return 'NNW';\n      } else if (angle >= 348.75) {\n        return 'N';\n      }\n    }\n    /**\r\n     * Pad the given number with a zero if its not 2 digits long.\r\n     * @param {string | number} num\r\n     */\n\n  }, {\n    key: \"padding\",\n    value: function padding(num) {\n      if (typeof num === 'string') {\n        if (num.length < 2) {\n          return '0' + num;\n        } else {\n          return num;\n        }\n      } else if (num < 10) {\n        return '0' + num;\n      } else {\n        return num;\n      }\n    }\n    /**\r\n     * Sets the date format.\r\n     * @param {string} format\r\n     */\n\n  }, {\n    key: \"setDataFormat\",\n    value: function setDataFormat(format) {\n      if (format) {\n        Utils.dateFormat = format.toUpperCase().split(/[.-/]/);\n        Utils.dateFormat.splice(Utils.dateFormat.indexOf('YYYY'), 1);\n      }\n    }\n    /**\r\n     * Converts the date to a string.\r\n     * @param {string | number | Date} now\r\n     * @returns {string}\r\n     */\n\n  }, {\n    key: \"date2string\",\n    value: function date2string(now) {\n      if (typeof now === 'string') {\n        now = now.trim();\n        if (!now) return ''; // only letters\n\n        if (now.match(/^[\\w\\s]+$/)) {\n          // Day of week\n          return now;\n        }\n\n        var m = now.match(/(\\d{1,4})[-./](\\d{1,2})[-./](\\d{1,4})/);\n\n        if (m) {\n          var a = [parseInt(m[1], 10), parseInt(m[2], 10), parseInt(m[3], 10)];\n          var year = a.find(function (y) {\n            return y > 31;\n          });\n          a.splice(a.indexOf(year), 1);\n          var day = a.find(function (m) {\n            return m > 12;\n          });\n\n          if (day) {\n            a.splice(a.indexOf(day), 1);\n            now = new Date(year, a[0] - 1, day);\n          } else {\n            // MM DD\n            if (Utils.dateFormat[0][0] === 'M' && Utils.dateFormat[1][0] === 'D') {\n              now = new Date(year, a[0] - 1, a[1]);\n\n              if (Math.abs(now.getTime - Date.now()) > 3600000 * 24 * 10) {\n                now = new Date(year, a[1] - 1, a[0]);\n              }\n            } else // DD MM\n              if (Utils.dateFormat[0][0] === 'D' && Utils.dateFormat[1][0] === 'M') {\n                now = new Date(year, a[1] - 1, a[0]);\n\n                if (Math.abs(now.getTime - Date.now()) > 3600000 * 24 * 10) {\n                  now = new Date(year, a[0] - 1, a[1]);\n                }\n              } else {\n                now = new Date(now);\n              }\n          }\n        } else {\n          now = new Date(now);\n        }\n      } else {\n        now = new Date(now);\n      }\n\n      var date = _i18n[\"default\"].t('ra_dow_' + days[now.getDay()]).replace('ra_dow_', '');\n\n      date += '. ' + now.getDate() + ' ' + _i18n[\"default\"].t('ra_month_' + months[now.getMonth()]).replace('ra_month_', '');\n      return date;\n    }\n    /**\r\n     * Render a text as a link.\r\n     * @param {string} text\r\n     * @returns {string | JSX.Element[]}\r\n     */\n\n  }, {\n    key: \"renderTextWithA\",\n    value: function renderTextWithA(text) {\n      var m = text.match(/<a [^<]+<\\/a>/);\n\n      if (m) {\n        var result = [];\n        var key = 1;\n\n        do {\n          var href = m[0].match(/href=\"([^\"]+)\"/) || m[0].match(/href='([^']+)'/);\n          var target = m[0].match(/target=\"([^\"]+)\"/) || m[0].match(/target='([^']+)'/);\n          var rel = m[0].match(/rel=\"([^\"]+)\"/) || m[0].match(/rel='([^']+)'/);\n          var title = m[0].match(/>([^<]*)</);\n          var p = text.split(m[0]);\n          p[0] && result.push( /*#__PURE__*/_react[\"default\"].createElement(\"span\", {\n            key: 'a' + key++\n          }, p[0]));\n          result.push( /*#__PURE__*/_react[\"default\"].createElement(\"a\", {\n            key: 'a' + key++,\n            href: href ? href[1] : '',\n            target: target ? target[1] : '_blank',\n            rel: rel ? rel[1] : ''\n          }, title ? title[1] : ''));\n          text = p[1];\n          m = text && text.match(/<a [^<]+<\\/a>/);\n\n          if (!m) {\n            p[1] && result.push( /*#__PURE__*/_react[\"default\"].createElement(\"span\", {\n              key: 'a' + key++\n            }, p[1]));\n          }\n        } while (m);\n\n        return result;\n      } else {\n        return text;\n      }\n    }\n    /**\r\n     * Get the smart name of the given state.\r\n     * @param {Record<string, ioBroker.StateObject> | ioBroker.StateObject} states\r\n     * @param {string} id\r\n     * @param {string} instanceId\r\n     * @param {boolean} [noCommon]\r\n     */\n\n  }, {\n    key: \"getSmartName\",\n    value: function getSmartName(states, id, instanceId, noCommon) {\n      if (!id) {\n        if (!noCommon) {\n          if (!states.common) {\n            return states.smartName;\n          } else {\n            if (states && !states.common) {\n              return states.smartName;\n            } else {\n              return states.common.smartName;\n            }\n          }\n        } else {\n          if (states && !states.common) {\n            return states.smartName;\n          } else {\n            return states && states.common && states.common.custom && states.common.custom[instanceId] ? states.common.custom[instanceId].smartName : undefined;\n          }\n        }\n      } else if (!noCommon) {\n        return states[id].common.smartName;\n      } else {\n        return states[id] && states[id].common && states[id].common.custom && states[id].common.custom[instanceId] ? states[id].common.custom[instanceId].smartName || null : null;\n      }\n    }\n    /**\r\n     * Get the smart name from a state.\r\n     * @param {ioBroker.StateObject} obj\r\n     * @param {string} instanceId\r\n     * @param {boolean} [noCommon]\r\n     */\n\n  }, {\n    key: \"getSmartNameFromObj\",\n    value: function getSmartNameFromObj(obj, instanceId, noCommon) {\n      if (!noCommon) {\n        if (!obj.common) {\n          return obj.smartName;\n        } else {\n          if (obj && !obj.common) {\n            return obj.smartName;\n          } else {\n            return obj.common.smartName;\n          }\n        }\n      } else {\n        if (obj && !obj.common) {\n          return obj.smartName;\n        } else {\n          return obj && obj.common && obj.common.custom && obj.common.custom[instanceId] ? obj.common.custom[instanceId].smartName : undefined;\n        }\n      }\n    }\n    /**\r\n     * Enable smart name for a state.\r\n     * @param {ioBroker.StateObject} obj\r\n     * @param {string} instanceId\r\n     * @param {boolean} [noCommon]\r\n     */\n\n  }, {\n    key: \"enableSmartName\",\n    value: function enableSmartName(obj, instanceId, noCommon) {\n      if (noCommon) {\n        obj.common.custom = obj.common.custom || {};\n        obj.common.custom[instanceId] = obj.common.custom[instanceId] || {};\n        obj.common.custom[instanceId].smartName = {};\n      } else {\n        obj.common.smartName = {};\n      }\n    }\n    /**\r\n     * Completely remove smart name from a state.\r\n     * @param {ioBroker.StateObject} obj\r\n     * @param {string | number} instanceId\r\n     * @param {boolean} [noCommon]\r\n     */\n\n  }, {\n    key: \"removeSmartName\",\n    value: function removeSmartName(obj, instanceId, noCommon) {\n      if (noCommon) {\n        if (obj.common && obj.common.custom && obj.common.custom[instanceId]) {\n          obj.common.custom[instanceId] = null;\n        }\n      } else {\n        obj.common.smartName = null;\n      }\n    }\n    /**\r\n     * Update the smartname of a state.\r\n     * @param {ioBroker.StateObject} obj\r\n     * @param {string} newSmartName\r\n     * @param {string | undefined} byON\r\n     * @param {string | undefined} smartType\r\n     * @param {string} instanceId\r\n     * @param {boolean} [noCommon]\r\n     */\n\n  }, {\n    key: \"updateSmartName\",\n    value: function updateSmartName(obj, newSmartName, byON, smartType, instanceId, noCommon) {\n      var language = _i18n[\"default\"].getLanguage(); // convert Old format\n\n\n      if (typeof obj.common.smartName === 'string') {\n        var nnn = obj.common.smartName;\n        obj.common.smartName = {};\n        obj.common.smartName[language] = nnn;\n      } // convert old settings\n\n\n      if (obj[\"native\"] && obj[\"native\"].byON) {\n        delete obj[\"native\"].byON;\n        var _smartName = obj.common.smartName;\n\n        if (!_smartName || _typeof(_smartName) !== 'object') {\n          _smartName = {\n            en: _smartName\n          };\n          _smartName[language] = _smartName.en;\n        }\n\n        obj.common.smartName = _smartName;\n      }\n\n      if (smartType !== undefined) {\n        if (noCommon) {\n          obj.common.custom = obj.common.custom || {};\n          obj.common.custom[instanceId] = obj.common.custom[instanceId] || {};\n          obj.common.custom[instanceId].smartName = obj.common.custom[instanceId].smartName || {};\n\n          if (!smartType) {\n            delete obj.common.custom[instanceId].smartName.smartType;\n          } else {\n            obj.common.custom[instanceId].smartName.smartType = smartType;\n          }\n        } else {\n          obj.common.smartName = obj.common.smartName || {};\n\n          if (!smartType) {\n            delete obj.common.smartName.smartType;\n          } else {\n            obj.common.smartName.smartType = smartType;\n          }\n        }\n      }\n\n      if (byON !== undefined) {\n        if (noCommon) {\n          obj.common.custom = obj.common.custom || {};\n          obj.common.custom[instanceId] = obj.common.custom[instanceId] || {};\n          obj.common.custom[instanceId].smartName = obj.common.custom[instanceId].smartName || {};\n          obj.common.custom[instanceId].smartName.byON = byON;\n        } else {\n          obj.common.smartName = obj.common.smartName || {};\n          obj.common.smartName.byON = byON;\n        }\n      }\n\n      if (newSmartName !== undefined) {\n        var smartName;\n\n        if (noCommon) {\n          obj.common.custom = obj.common.custom || {};\n          obj.common.custom[instanceId] = obj.common.custom[instanceId] || {};\n          obj.common.custom[instanceId].smartName = obj.common.custom[instanceId].smartName || {};\n          smartName = obj.common.custom[instanceId].smartName;\n        } else {\n          obj.common.smartName = obj.common.smartName || {};\n          smartName = obj.common.smartName;\n        }\n\n        smartName[language] = newSmartName; // If smart name deleted\n\n        if (smartName && (!smartName[language] || smartName[language] === obj.common.name && (!obj.common.role || obj.common.role.indexOf('button') >= 0))) {\n          delete smartName[language];\n          var empty = true; // Check if structure has any definitions\n\n          for (var key in smartName) {\n            if (smartName.hasOwnProperty(key)) {\n              empty = false;\n              break;\n            }\n          } // If empty => delete smartName completely\n\n\n          if (empty) {\n            if (noCommon) {\n              if (obj.common.custom[instanceId].smartName.byON === undefined) {\n                delete obj.common.custom[instanceId];\n              } else {\n                delete obj.common.custom[instanceId].en;\n                delete obj.common.custom[instanceId].de;\n                delete obj.common.custom[instanceId].ru;\n                delete obj.common.custom[instanceId].nl;\n                delete obj.common.custom[instanceId].pl;\n                delete obj.common.custom[instanceId].it;\n                delete obj.common.custom[instanceId].fr;\n                delete obj.common.custom[instanceId].pt;\n                delete obj.common.custom[instanceId].es;\n                delete obj.common.custom[instanceId]['zh-cn'];\n              }\n            } else {\n              if (obj.common.smartName.byON !== undefined) {\n                delete obj.common.smartName.en;\n                delete obj.common.smartName.de;\n                delete obj.common.smartName.ru;\n                delete obj.common.smartName.nl;\n                delete obj.common.smartName.pl;\n                delete obj.common.smartName.it;\n                delete obj.common.smartName.fr;\n                delete obj.common.smartName.pt;\n                delete obj.common.smartName.es;\n                delete obj.common.smartName['zh-cn'];\n              } else {\n                obj.common.smartName = null;\n              }\n            }\n          }\n        }\n      }\n    }\n    /**\r\n     * Disable the smart name of a state.\r\n     * @param {ioBroker.StateObject} obj\r\n     * @param {string} instanceId\r\n     * @param {boolean} [noCommon]\r\n     */\n\n  }, {\n    key: \"disableSmartName\",\n    value: function disableSmartName(obj, instanceId, noCommon) {\n      if (noCommon) {\n        obj.common.custom = obj.common.custom || {};\n        obj.common.custom[instanceId] = obj.common.custom[instanceId] || {};\n        obj.common.custom[instanceId].smartName = false;\n      } else {\n        obj.common.smartName = false;\n      }\n    }\n    /**\r\n     * Copy text to the clipboard.\r\n     * @param {string} text\r\n     * @param {Event} [e]\r\n     */\n\n  }, {\n    key: \"copyToClipboard\",\n    value: function copyToClipboard(text, e) {\n      var el = window.document.createElement('textarea');\n      el.value = text;\n      window.document.body.appendChild(el);\n      el.select();\n      window.document.execCommand('copy');\n      window.document.body.removeChild(el);\n      console.log(text);\n      e && e.stopPropagation();\n      e && e.preventDefault();\n    }\n    /**\r\n     * Gets the extension of a file name.\r\n     * @param {string | null} [fileName] the file name.\r\n     * @returns {string | null} The extension in lower case.\r\n     */\n\n  }, {\n    key: \"getFileExtension\",\n    value: function getFileExtension(fileName) {\n      var pos = (fileName || '').lastIndexOf('.');\n\n      if (pos !== -1) {\n        return fileName.substring(pos + 1).toLowerCase();\n      } else {\n        return null;\n      }\n    }\n    /**\r\n     * Format number of bytes as a string with B, KB, MB or GB.\r\n     * The base for all calculations is 1024.\r\n     * @param {number} bytes The number of bytes.\r\n     * @returns {string} The formatted string (e.g. '723.5 KB')\r\n     */\n\n  }, {\n    key: \"formatBytes\",\n    value: function formatBytes(bytes) {\n      if (Math.abs(bytes) < 1024) {\n        return bytes + ' B';\n      }\n\n      var units = ['KB', 'MB', 'GB']; //const units = ['KiB','MiB','GiB','TiB','PiB','EiB','ZiB','YiB'];\n\n      var u = -1;\n\n      do {\n        bytes /= 1024;\n        ++u;\n      } while (Math.abs(bytes) >= 1024 && u < units.length - 1);\n\n      return bytes.toFixed(1) + ' ' + units[u];\n    } // Big thanks to : https://stackoverflow.com/questions/35969656/how-can-i-generate-the-opposite-color-according-to-current-color\n\n    /**\r\n     * Invert the given color\r\n     * @param {string} hex Color in the format '#rrggbb' or '#rgb' (or without hash)\r\n     * @param {boolean} [bw] Set to black or white.\r\n     * @returns {string}\r\n     */\n\n  }, {\n    key: \"invertColor\",\n    value: function invertColor(hex, bw) {\n      if (hex.indexOf('#') === 0) {\n        hex = hex.slice(1);\n      } // convert 3-digit hex to 6-digits.\n\n\n      if (hex.length === 3) {\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n      }\n\n      if (hex.length !== 6) {\n        throw new Error('Invalid HEX color.');\n      }\n\n      var r = parseInt(hex.slice(0, 2), 16);\n      var g = parseInt(hex.slice(2, 4), 16);\n      var b = parseInt(hex.slice(4, 6), 16);\n\n      if (bw) {\n        // http://stackoverflow.com/a/3943023/112731\n        return r * 0.299 + g * 0.587 + b * 0.114 > 186 ? '#000000' : '#FFFFFF';\n      } // invert color components\n\n\n      r = (255 - r).toString(16);\n      g = (255 - g).toString(16);\n      b = (255 - b).toString(16); // pad each with zeros and return\n\n      return '#' + r.padStart(2, '0') + g.padStart(2, '0') + b.padStart(2, '0');\n    } // https://github.com/lukeed/clsx/blob/master/src/index.js\n    // License\n    // MIT © Luke Edwards\n\n    /**\r\n     * @private\r\n     * @param {any} mix\r\n     * @returns {string}\r\n     */\n\n  }, {\n    key: \"_toVal\",\n    value: function _toVal(mix) {\n      var k,\n          y,\n          str = '';\n\n      if (typeof mix === 'string' || typeof mix === 'number') {\n        str += mix;\n      } else if (_typeof(mix) === 'object') {\n        if (Array.isArray(mix)) {\n          for (k = 0; k < mix.length; k++) {\n            if (mix[k]) {\n              if (y = Utils._toVal(mix[k])) {\n                str && (str += ' ');\n                str += y;\n              }\n            }\n          }\n        } else {\n          for (k in mix) {\n            if (mix[k]) {\n              str && (str += ' ');\n              str += k;\n            }\n          }\n        }\n      }\n\n      return str;\n    } // https://github.com/lukeed/clsx/blob/master/src/index.js\n    // License\n    // MIT © Luke Edwards\n\n    /**\r\n     * Convert any object to a string with its values.\r\n     * @returns {string}\r\n     */\n\n  }, {\n    key: \"clsx\",\n    value: function clsx() {\n      var i = 0;\n      var tmp;\n      var x;\n      var str = '';\n\n      while (i < arguments.length) {\n        if (tmp = arguments[i++]) {\n          if (x = Utils._toVal(tmp)) {\n            str && (str += ' ');\n            str += x;\n          }\n        }\n      }\n\n      return str;\n    }\n    /**\r\n     * Get the current theme name (either from local storage or the browser settings).\r\n     * @param {string} [themeName]\r\n     * @returns {string}\r\n     */\n\n  }, {\n    key: \"getThemeName\",\n    value: function getThemeName() {\n      var themeName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      return themeName ? themeName : window.localStorage && window.localStorage.getItem('App.themeName') ? window.localStorage.getItem('App.themeName') : window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'colored';\n    }\n    /**\r\n     * Get the type of theme.\r\n     * @param {string} [themeName]\r\n     * @returns {'dark' | 'light'}\r\n     */\n\n  }, {\n    key: \"getThemeType\",\n    value: function getThemeType() {\n      var themeName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      themeName = themeName || window.localStorage && window.localStorage.getItem('App.themeName');\n      return themeName === 'dark' || themeName === 'blue' ? 'dark' : 'light';\n    }\n    /**\r\n     * Set the theme name and theme type.\r\n     * @param {string} themeName\r\n     */\n\n  }, {\n    key: \"setThemeName\",\n    value: function setThemeName(themeName) {\n      window.localStorage.setItem('App.themeName', themeName);\n      window.localStorage.setItem('App.theme', themeName === 'dark' || themeName === 'blue' ? 'dark' : 'light');\n    }\n    /**\r\n     * Toggle the theme name between 'dark' and 'colored'.\r\n     * @param {string | null} themeName\r\n     * @returns {string} the new theme name.\r\n     */\n\n  }, {\n    key: \"toggleTheme\",\n    value: function toggleTheme(themeName) {\n      themeName = themeName || window.localStorage && window.localStorage.getItem('App.themeName');\n      var newThemeName = themeName === 'dark' ? 'blue' : themeName === 'blue' ? 'colored' : themeName === 'colored' ? 'light' : themeName === 'light' ? 'dark' : 'colored';\n      Utils.setThemeName(newThemeName);\n      return newThemeName;\n    }\n    /**\r\n     * Parse a query string into its parts.\r\n     * @param {string} query\r\n     * @returns {Record<string, string | boolean | number>}\r\n     */\n\n  }, {\n    key: \"parseQuery\",\n    value: function parseQuery(query) {\n      query = (query || '').toString().replace(/^\\?/, '');\n      /** @type {Record<string, string | boolean | number>} */\n\n      var result = {};\n      query.split('&').forEach(function (part) {\n        part = part.trim();\n\n        if (part) {\n          var parts = part.split('=');\n          var attr = decodeURIComponent(parts[0]).trim();\n\n          if (parts.length > 1) {\n            result[attr] = decodeURIComponent(parts[1]);\n\n            if (result[attr] === 'true') {\n              result[attr] = true;\n            } else if (result[attr] === 'false') {\n              result[attr] = false;\n            } else {\n              var f = parseFloat(result[attr]);\n\n              if (f.toString() === result[attr]) {\n                result[attr] = f;\n              }\n            }\n          } else {\n            result[attr] = true;\n          }\n        }\n      });\n      return result;\n    }\n    /**\r\n     * Returns parent ID.\r\n     * @param {string} id\r\n     * @returns {string | null} parent ID or null if no parent\r\n     */\n\n  }, {\n    key: \"getParentId\",\n    value: function getParentId(id) {\n      var p = (id || '').toString().split('.');\n\n      if (p.length > 1) {\n        p.pop();\n        return p.join('.');\n      } else {\n        return null;\n      }\n    }\n  }]);\n\n  return Utils;\n}();\n\n_defineProperty(Utils, \"namespace\", NAMESPACE);\n\n_defineProperty(Utils, \"INSTANCES\", 'instances');\n\n_defineProperty(Utils, \"dateFormat\", ['DD', 'MM']);\n\n_defineProperty(Utils, \"FORBIDDEN_CHARS\", /[\\][*,;'\"`<>\\\\?]/g);\n\nvar _default = Utils;\nexports[\"default\"] = _default;\n\n"},"sourceMaps":{"js":{"version":3,"sources":["Utils.js"],"names":["NAMESPACE","days","months","Utils","name","split","filter","item","map","word","toUpperCase","substring","toLowerCase","join","objects","id","settings","options","isDesc","text","attr","language","common","window","sysLang","en","desc","de","ru","toString","replace","pos","lastIndexOf","CapitalWords","trim","obj","_id","forEnumId","hasOwnProperty","custom","user","subOrder","JSON","parse","stringify","order","subURLs","URLs","list","source","dest","result","Array","from","splice","removed","defaultEnabling","enabled","undefined","useCustom","useCommon","color","icon","s","style","length","startsWith","prefix","parts","location","pathname","match","words","i","z","ww","start","push","k","w","defaultValue","indexOf","slice","r","g","b","rgb","parseInt","seconds","parseFloat","isNaN","hours","Math","floor","minutes","secs","angle","num","format","dateFormat","now","m","a","year","find","y","day","Date","abs","getTime","date","I18n","t","getDay","getDate","getMonth","key","href","target","rel","title","p","states","instanceId","noCommon","smartName","newSmartName","byON","smartType","getLanguage","nnn","_smartName","role","empty","nl","pl","it","fr","pt","es","e","el","document","createElement","value","body","appendChild","select","execCommand","removeChild","console","log","stopPropagation","preventDefault","fileName","bytes","units","u","toFixed","hex","bw","Error","padStart","mix","str","isArray","_toVal","tmp","x","arguments","themeName","localStorage","getItem","matchMedia","matches","setItem","newThemeName","setThemeName","query","forEach","part","decodeURIComponent","f","pop"],"mappings":"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","sourcesContent":["/**\r\n * Copyright 2018-2020 bluefox <dogafox@gmail.com>\r\n *\r\n * MIT License\r\n *\r\n **/\r\nimport React from 'react';\r\nimport I18n from '../i18n';\r\n\r\nconst NAMESPACE = 'material';\r\nconst days = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'];\r\nconst months = ['Jan', 'Feb', 'Mar', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\nclass Utils {\r\n    static namespace = NAMESPACE;\r\n    static INSTANCES = 'instances';\r\n    static dateFormat = ['DD', 'MM'];\r\n    static FORBIDDEN_CHARS = /[\\][*,;'\"`<>\\\\?]/g;\r\n\r\n    /**\r\n     * Capitalize words.\r\n     * @param {string | undefined} name\r\n     * @returns {string}\r\n     */\r\n    static CapitalWords(name) {\r\n        return (name || '').split(/[\\s_]/)\r\n            .filter(item => item)\r\n            .map(word => word ? word[0].toUpperCase() + word.substring(1).toLowerCase() : '')\r\n            .join(' ');\r\n    }\r\n\r\n    /**\r\n     * Get the name of the object by id from the name or description.\r\n     * @param {Record<string, ioBroker.Object>} objects\r\n     * @param {string} id\r\n     * @param {{ name: any; } | ioBroker.Languages | null} settings\r\n     * @param {{ language?: ioBroker.Languages; }} options\r\n     * @param {boolean} [isDesc] Set to true to get the description.\r\n     * @returns {string}\r\n     */\r\n    static getObjectName(objects, id, settings, options, isDesc) {\r\n        let item = objects[id];\r\n        let text = id;\r\n        const attr = isDesc ? 'desc' : 'name';\r\n\r\n        if (typeof settings === 'string' && !options) {\r\n            options = {language: settings};\r\n            settings = null;\r\n        }\r\n\r\n        options = options || {};\r\n        if (!options.language) {\r\n            options.language = (objects['system.config'] && objects['system.config'].common && objects['system.config'].common.language) || window.sysLang || 'en';\r\n        }\r\n        if (settings && settings.name) {\r\n            text = settings.name;\r\n            if (typeof text === 'object') {\r\n                text = text[options.language] || text.en;\r\n            }\r\n        } else\r\n        if (item && item.common && item.common[attr]) {\r\n            text = item.common[attr];\r\n            if (attr !== 'desc' && !text && item.common.desc) {\r\n                text = item.common.desc;\r\n            }\r\n            if (typeof text === 'object') {\r\n                text = text[options.language] || text.en || text.de || text.ru || '';\r\n            }\r\n            text = (text || '').toString().replace(/[_.]/g, ' ');\r\n\r\n            if (text === text.toUpperCase()) {\r\n                text = text[0] + text.substring(1).toLowerCase();\r\n            }\r\n        } else {\r\n            let pos = id.lastIndexOf('.');\r\n            text = id.substring(pos + 1).replace(/[_.]/g, ' ');\r\n            text = Utils.CapitalWords(text);\r\n        }\r\n        return text.trim();\r\n    }\r\n\r\n    /**\r\n     * Get the name of the object from the name or description.\r\n     * @param {ioBroker.PartialObject} obj\r\n     * @param {{ name: any; } | ioBroker.Languages | null } settings or language\r\n     * @param {{ language?: ioBroker.Languages; } } options\r\n     * @param {boolean} [isDesc] Set to true to get the description.\r\n     * @returns {string}\r\n     */\r\n    static getObjectNameFromObj(obj, settings, options, isDesc) {\r\n        let item = obj;\r\n        let text = (obj && obj._id) || '';\r\n        const attr = isDesc ? 'desc' : 'name';\r\n\r\n        if (typeof settings === 'string' && !options) {\r\n            options = {language: settings};\r\n            settings = null;\r\n        }\r\n\r\n        options = options || {};\r\n\r\n        if (settings && settings.name) {\r\n            text = settings.name;\r\n            if (typeof text === 'object') {\r\n                text = text[options.language] || text.en;\r\n            }\r\n        } else\r\n        if (item && item.common && item.common[attr]) {\r\n            text = item.common[attr];\r\n            if (attr !== 'desc' && !text && item.common.desc) {\r\n                text = item.common.desc;\r\n            }\r\n            if (typeof text === 'object') {\r\n                text = text[options.language] || text.en;\r\n            }\r\n            text = (text || '').toString().replace(/[_.]/g, ' ');\r\n\r\n            if (text === text.toUpperCase()) {\r\n                text = text[0] + text.substring(1).toLowerCase();\r\n            }\r\n        }\r\n        return text.trim();\r\n    }\r\n\r\n    /**\r\n     * @param {ioBroker.PartialObject | ioBroker.ObjectCommon} obj\r\n     * @param {string} forEnumId\r\n     * @param {{ user: string; }} options\r\n     * @returns {string | null}\r\n     */\r\n    static getSettingsOrder(obj, forEnumId, options) {\r\n        if (obj && obj.hasOwnProperty('common')) {\r\n            obj = obj.common;\r\n        }\r\n        let settings;\r\n        if (obj && obj.custom) {\r\n            settings = (obj.custom || {})[NAMESPACE];\r\n            const user = options.user || 'admin';\r\n            if (settings && settings[user]) {\r\n                if (forEnumId) {\r\n                    if (settings[user].subOrder && settings[user].subOrder[forEnumId]) {\r\n                        return JSON.parse(JSON.stringify(settings[user].subOrder[forEnumId]));\r\n                    }\r\n                } else {\r\n                    if (settings[user].order) {\r\n                        return JSON.parse(JSON.stringify(settings[user].order));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @param {ioBroker.PartialObject | ioBroker.ObjectCommon} obj\r\n     * @param {string} forEnumId\r\n     * @param {{ user: string; }} options\r\n     */\r\n    static getSettingsCustomURLs(obj, forEnumId, options) {\r\n        if (obj && obj.hasOwnProperty('common')) {\r\n            obj = obj.common;\r\n        }\r\n        let settings;\r\n        if (obj && obj.custom) {\r\n            settings = (obj.custom || {})[NAMESPACE];\r\n            const user = options.user || 'admin';\r\n            if (settings && settings[user]) {\r\n                if (forEnumId) {\r\n                    if (settings[user].subURLs && settings[user].subURLs[forEnumId]) {\r\n                        return JSON.parse(JSON.stringify(settings[user].subURLs[forEnumId]));\r\n                    }\r\n                } else {\r\n                    if (settings[user].URLs) {\r\n                        return JSON.parse(JSON.stringify(settings[user].URLs));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Reorder the array items in list between source and dest.\r\n     * @param {Iterable<any> | ArrayLike<any>} list\r\n     * @param {number} source\r\n     * @param {number} dest\r\n     */\r\n    static reorder(list, source, dest) {\r\n        const result = Array.from(list);\r\n        const [removed] = result.splice(source, 1);\r\n        result.splice(dest, 0, removed);\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * @param {any} obj\r\n     * @param {{ id: any; user: any; name: any; icon: any; color: any; language: ioBroker.Languages; }} options\r\n     * @param {boolean} [defaultEnabling]\r\n     */\r\n    static getSettings(obj, options, defaultEnabling) {\r\n        let settings;\r\n        const id = (obj && obj._id) || (options && options.id);\r\n        if (obj && obj.hasOwnProperty('common')) {\r\n            obj = obj.common;\r\n        }\r\n        if (obj && obj.custom) {\r\n            settings = obj.custom || {};\r\n            settings = settings[NAMESPACE] && settings[NAMESPACE][options.user || 'admin'] ? JSON.parse(JSON.stringify(settings[NAMESPACE][options.user || 'admin'])) : {enabled: true};\r\n        } else {\r\n            settings = {enabled: defaultEnabling === undefined ? true : defaultEnabling, useCustom: false};\r\n        }\r\n\r\n        if (!settings.hasOwnProperty('enabled')) {\r\n            settings.enabled = defaultEnabling === undefined ? true : defaultEnabling;\r\n        }\r\n\r\n        if (false && settings.useCommon) {\r\n            if (obj.color) settings.color = obj.color;\r\n            if (obj.icon)  settings.icon  = obj.icon;\r\n            if (obj.name)  settings.name  = obj.name;\r\n        } else {\r\n            if (options) {\r\n                if (!settings.name  && options.name)  settings.name  = options.name;\r\n                if (!settings.icon  && options.icon)  settings.icon  = options.icon;\r\n                if (!settings.color && options.color) settings.color = options.color;\r\n            }\r\n\r\n            if (obj) {\r\n                if (!settings.color && obj.color) settings.color = obj.color;\r\n                if (!settings.icon  && obj.icon)  settings.icon  = obj.icon;\r\n                if (!settings.name  && obj.name)  settings.name  = obj.name;\r\n            }\r\n        }\r\n\r\n        if (typeof settings.name === 'object') {\r\n            settings.name = settings.name[options.language] || settings.name.en;\r\n\r\n            settings.name = (settings.name || '').toString().replace(/_/g, ' ');\r\n\r\n            if (settings.name === settings.name.toUpperCase()) {\r\n                settings.name = settings.name[0] + settings.name.substring(1).toLowerCase();\r\n            }\r\n        }\r\n        if (!settings.name && id) {\r\n            let pos = id.lastIndexOf('.');\r\n            settings.name = id.substring(pos + 1).replace(/[_.]/g, ' ');\r\n            settings.name = (settings.name || '').toString().replace(/_/g, ' ');\r\n            settings.name = Utils.CapitalWords(settings.name);\r\n        }\r\n\r\n        return settings;\r\n    }\r\n\r\n    /**\r\n     * @param {any} obj\r\n     * @param {any} settings\r\n     * @param {{ user: any; language: ioBroker.Languages; }} options\r\n     */\r\n    static setSettings(obj, settings, options) {\r\n        if (obj) {\r\n            obj.common = obj.common || {};\r\n            obj.common.custom = obj.common.custom || {};\r\n            obj.common.custom[NAMESPACE] = obj.common.custom[NAMESPACE] || {};\r\n            obj.common.custom[NAMESPACE][options.user || 'admin'] = settings;\r\n            const s = obj.common.custom[NAMESPACE][options.user || 'admin'];\r\n            if (s.useCommon) {\r\n                if (s.color !== undefined) {\r\n                    obj.common.color = s.color;\r\n                    delete s.color;\r\n                }\r\n                if (s.icon !== undefined) {\r\n                    obj.common.icon = s.icon;\r\n                    delete s.icon;\r\n                }\r\n                if (s.name !== undefined) {\r\n                    if (typeof obj.common.name !== 'object') {\r\n                        obj.common.name = {};\r\n                        obj.common.name[options.language] = s.name;\r\n                    } else{\r\n                        obj.common.name[options.language] = s.name;\r\n                    }\r\n                    delete s.name;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the icon for the given settings.\r\n     * @param {{ icon: string | undefined; name: string | undefined; prefix: string | undefined}} settings\r\n     * @param {any} style\r\n     * @returns {JSX.Element | null}\r\n     */\r\n    static getIcon(settings, style) {\r\n        if (settings && settings.icon) {\r\n            // If UTF-8 icon\r\n            if (settings.icon.length <= 2) {\r\n                return <span style={style || {}}>{settings.icon}</span>;\r\n            } else\r\n            if (settings.icon.startsWith('data:image')) {\r\n                return <img alt={settings.name} src={settings.icon} style={style || {}}/>;\r\n            } else { // may be later some changes for second type\r\n                return <img alt={settings.name} src={(settings.prefix || '') + settings.icon} style={style || {}}/>;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Get the icon for the given object.\r\n     * @param {string} id\r\n     * @param {{ common: { icon: any; }; }} obj\r\n     * @returns {string | null}\r\n     */\r\n    static getObjectIcon(id, obj) {\r\n        // If id is Object\r\n        if (typeof id === 'object') {\r\n            obj = id;\r\n            id = obj._id;\r\n        }\r\n\r\n        if (obj && obj.common && obj.common.icon) {\r\n            let icon = obj.common.icon;\r\n            // If UTF-8 icon\r\n            if (typeof icon === 'string' && icon.length <= 2) {\r\n                return icon;\r\n            } else\r\n            if (icon.startsWith('data:image')) {\r\n                return icon;\r\n            } else {\r\n                const parts = id.split('.');\r\n                if (parts[0] === 'system') {\r\n                    icon = 'adapter/' + parts[2] + (icon.startsWith('/') ? '' : '/') + icon;\r\n                } else {\r\n                    icon = 'adapter/' + parts[0] + (icon.startsWith('/') ? '' : '/') + icon;\r\n                }\r\n\r\n                if (window.location.pathname.match(/adapter\\/[^/]+\\/[^/]+\\.html/)) {\r\n                    icon = '../../' + icon;\r\n                } else if (window.location.pathname.match(/material\\/[.\\d]+/)) {\r\n                    icon = '../../' + icon;\r\n                } else\r\n                if (window.location.pathname.match(/material\\//)) {\r\n                    icon = '../' + icon;\r\n                }\r\n                return icon;\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Splits CamelCase into words.\r\n     * @param {string | undefined} text\r\n     * @returns {string}\r\n     */\r\n    static splitCamelCase(text) {\r\n        if (false && text !== text.toUpperCase()) {\r\n            const words = text.split(/\\s+/);\r\n            for (let i = 0; i < words.length; i++) {\r\n                let word = words[i];\r\n                if (word.toLowerCase() !== word && word.toUpperCase() !== word) {\r\n                    let z = 0;\r\n                    const ww = [];\r\n                    let start = 0;\r\n                    while (z < word.length) {\r\n                        if (word[z].match(/[A-ZÜÄÖА-Я]/)) {\r\n                            ww.push(word.substring(start, z));\r\n                            start = z;\r\n                        }\r\n                        z++;\r\n                    }\r\n                    if (start !== z) {\r\n                        ww.push(word.substring(start, z));\r\n                    }\r\n                    for (let k = 0; k < ww.length; k++) {\r\n                        words.splice(i + k, 0, ww[k]);\r\n                    }\r\n                    i += ww.length;\r\n                }\r\n            }\r\n\r\n            return words.map(w => {\r\n                w = w.trim();\r\n                if (w) {\r\n                    return w[0].toUpperCase() + w.substring(1).toLowerCase();\r\n                }\r\n                return '';\r\n            }).join(' ');\r\n        } else {\r\n            return Utils.CapitalWords(text);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if the given color is bright.\r\n     * https://stackoverflow.com/questions/35969656/how-can-i-generate-the-opposite-color-according-to-current-color\r\n     * @param {string | null | undefined} color\r\n     * @param {boolean} [defaultValue]\r\n     * @returns {boolean}\r\n     */\r\n    static isUseBright(color, defaultValue) {\r\n        if (color === null || color === undefined || color === '') {\r\n            return defaultValue === undefined ? true : defaultValue;\r\n        }\r\n        color = color.toString();\r\n        if (color.indexOf('#') === 0) {\r\n            color = color.slice(1);\r\n        }\r\n        let r;\r\n        let g;\r\n        let b;\r\n\r\n        const rgb = color.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);\r\n        if (rgb && rgb.length === 4) {\r\n            r = parseInt(rgb[1], 10);\r\n            g = parseInt(rgb[2], 10);\r\n            b = parseInt(rgb[3], 10);\r\n        } else {\r\n            // convert 3-digit hex to 6-digits.\r\n            if (color.length === 3) {\r\n                color = color[0] + color[0] + color[1] + color[1] + color[2] + color[2];\r\n            }\r\n            if (color.length !== 6) {\r\n                return false;\r\n            }\r\n\r\n            r = parseInt(color.slice(0, 2), 16);\r\n            g = parseInt(color.slice(2, 4), 16);\r\n            b = parseInt(color.slice(4, 6), 16);\r\n        }\r\n\r\n        // http://stackoverflow.com/a/3943023/112731\r\n        return (r * 0.299 + g * 0.587 + b * 0.114) <= 186;\r\n    };\r\n\r\n    /**\r\n     * Get the time string in the format 00:00.\r\n     * @param {string | number} seconds\r\n     */\r\n    static getTimeString(seconds) {\r\n        seconds = parseFloat(seconds);\r\n        if (isNaN(seconds)) {\r\n            return '--:--';\r\n        }\r\n        const hours = Math.floor(seconds / 3600);\r\n        let minutes = Math.floor((seconds % 3600) / 60);\r\n        let secs = seconds % 60;\r\n        if (hours) {\r\n            if (minutes < 10) minutes = '0' + minutes;\r\n            if (secs < 10) secs = '0' + secs;\r\n            return hours + ':' + minutes + ':' + secs;\r\n        } else {\r\n            if (secs < 10) secs = '0' + secs;\r\n            return minutes + ':' + secs;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets the wind direction with the given angle (degrees).\r\n     * @param {number} angle in degrees.\r\n     * @returns {string | undefined}\r\n     */\r\n    static getWindDirection(angle) {\r\n        if (angle >= 0 && angle < 11.25) {\r\n            return 'N'\r\n        } else if (angle >= 11.25 && angle < 33.75) {\r\n            return 'NNE'\r\n        } else if (angle >= 33.75 && angle < 56.25) {\r\n            return 'NE'\r\n        } else if (angle >= 56.25 && angle < 78.75) {\r\n            return 'ENE'\r\n        } else if (angle >= 78.75 && angle < 101.25) {\r\n            return 'E'\r\n        } else if (angle >= 101.25 && angle < 123.75) {\r\n            return 'ESE'\r\n        } else if (angle >= 123.75 && angle < 146.25) {\r\n            return 'SE'\r\n        } else if (angle >= 146.25 && angle < 168.75) {\r\n            return 'SSE'\r\n        } else if (angle >= 168.75 && angle < 191.25) {\r\n            return 'S'\r\n        } else if (angle >= 191.25 && angle < 213.75) {\r\n            return 'SSW'\r\n        } else if (angle >= 213.75 && angle < 236.25) {\r\n            return 'SW'\r\n        } else if (angle >= 236.25 && angle < 258.75) {\r\n            return 'WSW'\r\n        } else if (angle >= 258.75 && angle < 281.25) {\r\n            return 'W'\r\n        } else if (angle >= 281.25 && angle < 303.75) {\r\n            return 'WNW'\r\n        } else if (angle >= 303.75 && angle < 326.25) {\r\n            return 'NW'\r\n        } else if (angle >= 326.25 && angle < 348.75) {\r\n            return 'NNW'\r\n        } else if (angle >= 348.75) {\r\n            return 'N'\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Pad the given number with a zero if its not 2 digits long.\r\n     * @param {string | number} num\r\n     */\r\n    static padding(num) {\r\n        if (typeof num === 'string') {\r\n            if (num.length < 2) {\r\n                return '0' + num;\r\n            } else {\r\n                return num;\r\n            }\r\n        } else if (num < 10) {\r\n            return '0' + num;\r\n        } else {\r\n            return num;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the date format.\r\n     * @param {string} format\r\n     */\r\n    static setDataFormat(format) {\r\n        if (format) {\r\n            Utils.dateFormat = format.toUpperCase().split(/[.-/]/);\r\n            Utils.dateFormat.splice(Utils.dateFormat.indexOf('YYYY'), 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Converts the date to a string.\r\n     * @param {string | number | Date} now\r\n     * @returns {string}\r\n     */\r\n    static date2string(now) {\r\n        if (typeof now === 'string') {\r\n            now = now.trim();\r\n            if (!now) return '';\r\n            // only letters\r\n            if (now.match(/^[\\w\\s]+$/)) {\r\n                // Day of week\r\n                return now;\r\n            }\r\n            let m = now.match(/(\\d{1,4})[-./](\\d{1,2})[-./](\\d{1,4})/);\r\n            if (m) {\r\n                let a = [parseInt(m[1], 10), parseInt(m[2], 10), parseInt(m[3], 10)];\r\n                let year = a.find(y => y > 31);\r\n                a.splice(a.indexOf(year), 1);\r\n                let day = a.find(m => m > 12);\r\n                if (day) {\r\n                    a.splice(a.indexOf(day), 1);\r\n                    now = new Date(year, a[0] - 1, day);\r\n                } else {\r\n                    // MM DD\r\n                    if (Utils.dateFormat[0][0] === 'M' && Utils.dateFormat[1][0] === 'D') {\r\n                        now = new Date(year, a[0] - 1, a[1]);\r\n                        if (Math.abs(now.getTime - Date.now()) > 3600000 * 24 * 10) {\r\n                            now = new Date(year, a[1] - 1, a[0]);\r\n                        }\r\n                    } else\r\n                    // DD MM\r\n                    if (Utils.dateFormat[0][0] === 'D' && Utils.dateFormat[1][0] === 'M') {\r\n                        now = new Date(year, a[1] - 1, a[0]);\r\n                        if (Math.abs(now.getTime - Date.now()) > 3600000 * 24 * 10) {\r\n                            now = new Date(year, a[0] - 1, a[1]);\r\n                        }\r\n                    } else {\r\n                        now = new Date(now);\r\n                    }\r\n                }\r\n            } else {\r\n                now = new Date(now);\r\n            }\r\n        } else {\r\n            now = new Date(now);\r\n        }\r\n\r\n        let date = I18n.t('ra_dow_' + days[now.getDay()]).replace('ra_dow_', '');\r\n        date += '. ' + now.getDate() + ' ' + I18n.t('ra_month_' + months[now.getMonth()]).replace('ra_month_', '');\r\n        return date;\r\n    }\r\n\r\n    /**\r\n     * Render a text as a link.\r\n     * @param {string} text\r\n     * @returns {string | JSX.Element[]}\r\n     */\r\n    static renderTextWithA(text) {\r\n        let m = text.match(/<a [^<]+<\\/a>/);\r\n        if (m) {\r\n            const result = [];\r\n            let key = 1;\r\n            do {\r\n                let href = m[0].match(/href=\"([^\"]+)\"/) || m[0].match(/href='([^']+)'/);\r\n                let target = m[0].match(/target=\"([^\"]+)\"/) || m[0].match(/target='([^']+)'/);\r\n                let rel = m[0].match(/rel=\"([^\"]+)\"/) || m[0].match(/rel='([^']+)'/);\r\n                const title = m[0].match(/>([^<]*)</);\r\n\r\n                const p = text.split(m[0]);\r\n                p[0] && result.push(<span key={'a' + (key++)}>{p[0]}</span>);\r\n                result.push(<a key={'a' + (key++)} href={href ? href[1] : ''} target={target ? target[1] : '_blank'} rel={rel ? rel[1] : ''}>{title ? title[1] : ''}</a>);\r\n                text = p[1];\r\n                m = text && text.match(/<a [^<]+<\\/a>/);\r\n                if (!m) {\r\n                    p[1] && result.push(<span key={'a' + (key++)}>{p[1]}</span>);\r\n                }\r\n            } while (m);\r\n            return result;\r\n        } else {\r\n            return text;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the smart name of the given state.\r\n     * @param {Record<string, ioBroker.StateObject> | ioBroker.StateObject} states\r\n     * @param {string} id\r\n     * @param {string} instanceId\r\n     * @param {boolean} [noCommon]\r\n     */\r\n    static getSmartName(states, id, instanceId, noCommon) {\r\n        if (!id) {\r\n            if (!noCommon) {\r\n                if (!states.common) {\r\n                    return states.smartName;\r\n                } else {\r\n                    if (states && !states.common) {\r\n                        return states.smartName;\r\n                    } else {\r\n                        return states.common.smartName;\r\n                    }\r\n                }\r\n            } else {\r\n                if (states && !states.common) {\r\n                    return states.smartName;\r\n                } else {\r\n                    return (states &&\r\n                        states.common &&\r\n                        states.common.custom &&\r\n                        states.common.custom[instanceId]) ?\r\n                        states.common.custom[instanceId].smartName : undefined;\r\n                }\r\n            }\r\n        } else\r\n        if (!noCommon) {\r\n            return states[id].common.smartName;\r\n        } else {\r\n            return (states[id] &&\r\n                states[id].common &&\r\n                states[id].common.custom &&\r\n                states[id].common.custom[instanceId]) ?\r\n                states[id].common.custom[instanceId].smartName || null : null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the smart name from a state.\r\n     * @param {ioBroker.StateObject} obj\r\n     * @param {string} instanceId\r\n     * @param {boolean} [noCommon]\r\n     */\r\n    static getSmartNameFromObj(obj, instanceId, noCommon) {\r\n        if (!noCommon) {\r\n            if (!obj.common) {\r\n                return obj.smartName;\r\n            } else {\r\n                if (obj && !obj.common) {\r\n                    return obj.smartName;\r\n                } else {\r\n                    return obj.common.smartName;\r\n                }\r\n            }\r\n        } else {\r\n            if (obj && !obj.common) {\r\n                return obj.smartName;\r\n            } else {\r\n                return (obj &&\r\n                    obj.common &&\r\n                    obj.common.custom &&\r\n                    obj.common.custom[instanceId]) ?\r\n                    obj.common.custom[instanceId].smartName : undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Enable smart name for a state.\r\n     * @param {ioBroker.StateObject} obj\r\n     * @param {string} instanceId\r\n     * @param {boolean} [noCommon]\r\n     */\r\n    static enableSmartName(obj, instanceId, noCommon) {\r\n        if (noCommon) {\r\n            obj.common.custom = obj.common.custom || {};\r\n            obj.common.custom[instanceId] = obj.common.custom[instanceId] || {};\r\n            obj.common.custom[instanceId].smartName = {};\r\n        } else {\r\n            obj.common.smartName = {};\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Completely remove smart name from a state.\r\n     * @param {ioBroker.StateObject} obj\r\n     * @param {string | number} instanceId\r\n     * @param {boolean} [noCommon]\r\n     */\r\n    static removeSmartName(obj, instanceId, noCommon) {\r\n        if (noCommon) {\r\n            if (obj.common && obj.common.custom && obj.common.custom[instanceId]) {\r\n                obj.common.custom[instanceId] = null;\r\n            }\r\n        } else {\r\n            obj.common.smartName = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update the smartname of a state.\r\n     * @param {ioBroker.StateObject} obj\r\n     * @param {string} newSmartName\r\n     * @param {string | undefined} byON\r\n     * @param {string | undefined} smartType\r\n     * @param {string} instanceId\r\n     * @param {boolean} [noCommon]\r\n     */\r\n    static updateSmartName(obj, newSmartName, byON, smartType, instanceId, noCommon) {\r\n        const language = I18n.getLanguage();\r\n\r\n        // convert Old format\r\n        if (typeof obj.common.smartName === 'string') {\r\n            const nnn = obj.common.smartName;\r\n            obj.common.smartName = {};\r\n            obj.common.smartName[language] = nnn;\r\n        }\r\n\r\n        // convert old settings\r\n        if (obj.native && obj.native.byON) {\r\n            delete obj.native.byON;\r\n            let _smartName = obj.common.smartName;\r\n\r\n            if (!_smartName || typeof _smartName !== 'object') {\r\n                _smartName = {en: _smartName};\r\n                _smartName[language] = _smartName.en;\r\n            }\r\n            obj.common.smartName = _smartName;\r\n        }\r\n        if (smartType !== undefined) {\r\n            if (noCommon) {\r\n                obj.common.custom = obj.common.custom || {};\r\n                obj.common.custom[instanceId] = obj.common.custom[instanceId] || {};\r\n                obj.common.custom[instanceId].smartName = obj.common.custom[instanceId].smartName || {};\r\n                if (!smartType) {\r\n                    delete obj.common.custom[instanceId].smartName.smartType;\r\n                } else {\r\n                    obj.common.custom[instanceId].smartName.smartType = smartType;\r\n                }\r\n            } else {\r\n                obj.common.smartName = obj.common.smartName || {};\r\n                if (!smartType) {\r\n                    delete obj.common.smartName.smartType;\r\n                } else {\r\n                    obj.common.smartName.smartType = smartType;\r\n                }\r\n\r\n            }\r\n        }\r\n        if (byON !== undefined) {\r\n            if (noCommon) {\r\n                obj.common.custom = obj.common.custom || {};\r\n                obj.common.custom[instanceId] = obj.common.custom[instanceId] || {};\r\n                obj.common.custom[instanceId].smartName = obj.common.custom[instanceId].smartName || {};\r\n                obj.common.custom[instanceId].smartName.byON = byON;\r\n            } else {\r\n                obj.common.smartName = obj.common.smartName || {};\r\n                obj.common.smartName.byON = byON;\r\n            }\r\n        }\r\n        if (newSmartName !== undefined) {\r\n            let smartName;\r\n            if (noCommon) {\r\n                obj.common.custom = obj.common.custom || {};\r\n                obj.common.custom[instanceId] = obj.common.custom[instanceId] || {};\r\n                obj.common.custom[instanceId].smartName = obj.common.custom[instanceId].smartName || {};\r\n                smartName = obj.common.custom[instanceId].smartName;\r\n            } else {\r\n                obj.common.smartName = obj.common.smartName || {};\r\n                smartName = obj.common.smartName;\r\n            }\r\n            smartName[language] = newSmartName;\r\n\r\n            // If smart name deleted\r\n            if (smartName && (!smartName[language] ||\r\n                (smartName[language] === obj.common.name &&\r\n                    (!obj.common.role || obj.common.role.indexOf('button') >= 0)))) {\r\n                delete smartName[language];\r\n                let empty = true;\r\n                // Check if structure has any definitions\r\n                for (const key in smartName) {\r\n                    if (smartName.hasOwnProperty(key)) {\r\n                        empty = false;\r\n                        break;\r\n                    }\r\n                }\r\n                // If empty => delete smartName completely\r\n                if (empty) {\r\n                    if (noCommon) {\r\n                        if (obj.common.custom[instanceId].smartName.byON === undefined) {\r\n                            delete obj.common.custom[instanceId];\r\n                        } else {\r\n                            delete obj.common.custom[instanceId].en;\r\n                            delete obj.common.custom[instanceId].de;\r\n                            delete obj.common.custom[instanceId].ru;\r\n                            delete obj.common.custom[instanceId].nl;\r\n                            delete obj.common.custom[instanceId].pl;\r\n                            delete obj.common.custom[instanceId].it;\r\n                            delete obj.common.custom[instanceId].fr;\r\n                            delete obj.common.custom[instanceId].pt;\r\n                            delete obj.common.custom[instanceId].es;\r\n                            delete obj.common.custom[instanceId]['zh-cn'];\r\n                        }\r\n                    } else {\r\n                        if (obj.common.smartName.byON !== undefined) {\r\n                            delete obj.common.smartName.en;\r\n                            delete obj.common.smartName.de;\r\n                            delete obj.common.smartName.ru;\r\n                            delete obj.common.smartName.nl;\r\n                            delete obj.common.smartName.pl;\r\n                            delete obj.common.smartName.it;\r\n                            delete obj.common.smartName.fr;\r\n                            delete obj.common.smartName.pt;\r\n                            delete obj.common.smartName.es;\r\n                            delete obj.common.smartName['zh-cn'];\r\n                        } else {\r\n                            obj.common.smartName = null;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Disable the smart name of a state.\r\n     * @param {ioBroker.StateObject} obj\r\n     * @param {string} instanceId\r\n     * @param {boolean} [noCommon]\r\n     */\r\n    static disableSmartName(obj, instanceId, noCommon) {\r\n        if (noCommon) {\r\n            obj.common.custom = obj.common.custom || {};\r\n            obj.common.custom[instanceId] = obj.common.custom[instanceId] || {};\r\n            obj.common.custom[instanceId].smartName = false;\r\n        } else {\r\n            obj.common.smartName = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Copy text to the clipboard.\r\n     * @param {string} text\r\n     * @param {Event} [e]\r\n     */\r\n    static copyToClipboard(text, e) {\r\n        const el = window.document.createElement('textarea');\r\n        el.value = text;\r\n        window.document.body.appendChild(el);\r\n        el.select();\r\n        window.document.execCommand('copy');\r\n        window.document.body.removeChild(el);\r\n        console.log(text);\r\n        e && e.stopPropagation();\r\n        e && e.preventDefault();\r\n    }\r\n\r\n    /**\r\n     * Gets the extension of a file name.\r\n     * @param {string | null} [fileName] the file name.\r\n     * @returns {string | null} The extension in lower case.\r\n     */\r\n    static getFileExtension(fileName) {\r\n        const pos = (fileName || '').lastIndexOf('.');\r\n        if (pos !== -1) {\r\n            return fileName.substring(pos + 1).toLowerCase();\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Format number of bytes as a string with B, KB, MB or GB.\r\n     * The base for all calculations is 1024.\r\n     * @param {number} bytes The number of bytes.\r\n     * @returns {string} The formatted string (e.g. '723.5 KB')\r\n     */\r\n    static formatBytes(bytes) {\r\n        if (Math.abs(bytes) < 1024) {\r\n            return bytes + ' B';\r\n        }\r\n\r\n        const units = ['KB','MB','GB'];\r\n        //const units = ['KiB','MiB','GiB','TiB','PiB','EiB','ZiB','YiB'];\r\n        let u = -1;\r\n\r\n        do {\r\n            bytes /= 1024;\r\n            ++u;\r\n        } while (Math.abs(bytes) >= 1024 && u < units.length - 1);\r\n\r\n        return bytes.toFixed(1) + ' ' + units[u];\r\n    }\r\n\r\n    // Big thanks to : https://stackoverflow.com/questions/35969656/how-can-i-generate-the-opposite-color-according-to-current-color\r\n    /**\r\n     * Invert the given color\r\n     * @param {string} hex Color in the format '#rrggbb' or '#rgb' (or without hash)\r\n     * @param {boolean} [bw] Set to black or white.\r\n     * @returns {string}\r\n     */\r\n    static invertColor(hex, bw) {\r\n        if (hex.indexOf('#') === 0) {\r\n            hex = hex.slice(1);\r\n        }\r\n        // convert 3-digit hex to 6-digits.\r\n        if (hex.length === 3) {\r\n            hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\r\n        }\r\n        if (hex.length !== 6) {\r\n            throw new Error('Invalid HEX color.');\r\n        }\r\n        let r = parseInt(hex.slice(0, 2), 16);\r\n        let g = parseInt(hex.slice(2, 4), 16);\r\n        let b = parseInt(hex.slice(4, 6), 16);\r\n\r\n        if (bw) {\r\n            // http://stackoverflow.com/a/3943023/112731\r\n            return (r * 0.299 + g * 0.587 + b * 0.114) > 186\r\n                ? '#000000'\r\n                : '#FFFFFF';\r\n        }\r\n        // invert color components\r\n        r = (255 - r).toString(16);\r\n        g = (255 - g).toString(16);\r\n        b = (255 - b).toString(16);\r\n        // pad each with zeros and return\r\n        return '#' + r.padStart(2, '0') + g.padStart(2, '0') + b.padStart(2, '0');\r\n    }\r\n\r\n    // https://github.com/lukeed/clsx/blob/master/src/index.js\r\n    // License\r\n    // MIT © Luke Edwards\r\n    /**\r\n     * @private\r\n     * @param {any} mix\r\n     * @returns {string}\r\n     */\r\n    static _toVal(mix) {\r\n        let k, y, str='';\r\n\r\n        if (typeof mix === 'string' || typeof mix === 'number') {\r\n            str += mix;\r\n        } else if (typeof mix === 'object') {\r\n            if (Array.isArray(mix)) {\r\n                for (k=0; k < mix.length; k++) {\r\n                    if (mix[k]) {\r\n                        if (y = Utils._toVal(mix[k])) {\r\n                            str && (str += ' ');\r\n                            str += y;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                for (k in mix) {\r\n                    if (mix[k]) {\r\n                        str && (str += ' ');\r\n                        str += k;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return str;\r\n    }\r\n\r\n    // https://github.com/lukeed/clsx/blob/master/src/index.js\r\n    // License\r\n    // MIT © Luke Edwards\r\n    /**\r\n     * Convert any object to a string with its values.\r\n     * @returns {string}\r\n     */\r\n    static clsx () {\r\n        let i = 0;\r\n        let tmp;\r\n        let x;\r\n        let str = '';\r\n        while (i < arguments.length) {\r\n            if (tmp = arguments[i++]) {\r\n                if (x = Utils._toVal(tmp)) {\r\n                    str && (str += ' ');\r\n                    str += x\r\n                }\r\n            }\r\n        }\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * Get the current theme name (either from local storage or the browser settings).\r\n     * @param {string} [themeName]\r\n     * @returns {string}\r\n     */\r\n    static getThemeName(themeName = '') {\r\n        return themeName ? themeName : window.localStorage && window.localStorage.getItem('App.themeName') ?\r\n            window.localStorage.getItem('App.themeName') : window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'colored';\r\n    }\r\n\r\n    /**\r\n     * Get the type of theme.\r\n     * @param {string} [themeName]\r\n     * @returns {'dark' | 'light'}\r\n     */\r\n    static getThemeType(themeName = '') {\r\n        themeName = themeName || window.localStorage && window.localStorage.getItem('App.themeName');\r\n        return themeName === 'dark' || themeName === 'blue' ? 'dark' : 'light';\r\n    }\r\n\r\n    /**\r\n     * Set the theme name and theme type.\r\n     * @param {string} themeName\r\n     */\r\n    static setThemeName(themeName) {\r\n        window.localStorage.setItem('App.themeName', themeName);\r\n        window.localStorage.setItem('App.theme', themeName === 'dark' || themeName === 'blue' ? 'dark' : 'light');\r\n    }\r\n\r\n    /**\r\n     * Toggle the theme name between 'dark' and 'colored'.\r\n     * @param {string | null} themeName\r\n     * @returns {string} the new theme name.\r\n     */\r\n    static toggleTheme(themeName) {\r\n        themeName = themeName || window.localStorage && window.localStorage.getItem('App.themeName');\r\n\r\n        const newThemeName = themeName === 'dark' ? 'blue' :\r\n            themeName === 'blue' ? 'colored' : themeName === 'colored' ? 'light' :\r\n                themeName === 'light' ? 'dark' : 'colored';\r\n\r\n        Utils.setThemeName(newThemeName);\r\n\r\n        return newThemeName;\r\n    }\r\n\r\n    /**\r\n     * Parse a query string into its parts.\r\n     * @param {string} query\r\n     * @returns {Record<string, string | boolean | number>}\r\n     */\r\n    static parseQuery(query) {\r\n        query = (query || '').toString().replace(/^\\?/, '');\r\n        /** @type {Record<string, string | boolean | number>} */\r\n        const result = {};\r\n        query.split('&').forEach(part => {\r\n            part = part.trim();\r\n            if (part) {\r\n                const parts = part.split('=');\r\n                const attr = decodeURIComponent(parts[0]).trim();\r\n                if (parts.length > 1) {\r\n                    result[attr] = decodeURIComponent(parts[1]);\r\n                    if (result[attr] === 'true') {\r\n                        result[attr] = true;\r\n                    } else if (result[attr] === 'false') {\r\n                        result[attr] = false;\r\n                    } else {\r\n                        const f = parseFloat(result[attr]);\r\n                        if (f.toString() === result[attr]) {\r\n                            result[attr] = f;\r\n                        }\r\n                    }\r\n                } else {\r\n                    result[attr] = true;\r\n                }\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Returns parent ID.\r\n     * @param {string} id\r\n     * @returns {string | null} parent ID or null if no parent\r\n     */\r\n    static getParentId(id) {\r\n        const p = (id || '').toString().split('.');\r\n        if (p.length > 1) {\r\n            p.pop();\r\n            return p.join('.');\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Utils;"],"file":"Utils.js"}},"error":null,"hash":"d8993fe64f4ee02b9359cb5154d9b400","cacheData":{"env":{}}}